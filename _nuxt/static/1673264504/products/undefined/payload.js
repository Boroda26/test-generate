__NUXT_JSONP__("/products/undefined", {data:[{}],fetch:{"0":{currentImage:"",adminMenu:true}},mutations:[["products\u002FclearProduct",void 0],["setError",{message:"Request failed with status code 500",name:"Error",description:void 0,number:void 0,fileName:void 0,lineNumber:void 0,columnNumber:void 0,stack:"Error: Request failed with status code 500\n    at createError (\u002FUsers\u002Fnikitaboroda\u002FDesktop\u002F26_kanga_app_frontend\u002Fkanga_app\u002Fnode_modules\u002Faxios\u002Flib\u002Fcore\u002FcreateError.js:16:15)\n    at settle (\u002FUsers\u002Fnikitaboroda\u002FDesktop\u002F26_kanga_app_frontend\u002Fkanga_app\u002Fnode_modules\u002Faxios\u002Flib\u002Fcore\u002Fsettle.js:17:12)\n    at IncomingMessage.handleStreamEnd (\u002FUsers\u002Fnikitaboroda\u002FDesktop\u002F26_kanga_app_frontend\u002Fkanga_app\u002Fnode_modules\u002Faxios\u002Flib\u002Fadapters\u002Fhttp.js:269:11)\n    at IncomingMessage.emit (events.js:326:22)\n    at endReadableNT (_stream_readable.js:1244:12)\n    at processTicksAndRejections (internal\u002Fprocess\u002Ftask_queues.js:80:21)",config:{url:"http:\u002F\u002F45.9.25.100:3010\u002Fproduct\u002Fundefined",method:"get",headers:{Accept:"application\u002Fjson, text\u002Fplain, *\u002F*","accept-encoding":"gzip, deflate","User-Agent":"axios\u002F0.21.4"},baseURL:"\u002F",transformRequest:[{}],transformResponse:[{}],timeout:0,adapter:{},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:{},transitional:{silentJSONParsing:true,forcedJSONParsing:true,clarifyTimeoutError:false},data:void 0},code:void 0}]]});